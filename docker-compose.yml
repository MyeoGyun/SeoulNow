services:
    # nginx:
    # image: nginx:alpine
    # container_name: nginx
    # volumes:
    #   - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # ports:
    #   - "80:80"
    #   - "443:443"
    # depends_on:
    #   - frontend
    #   - backend
  
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: seoulnow
      POSTGRES_USER: seoulnow
      POSTGRES_PASSWORD: seoulnow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "seoulnow"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+asyncpg://seoulnow:seoulnow@postgres:5432/seoulnow
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://13.50.132.59:8000/api
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  postgres_data:
